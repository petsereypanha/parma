CREATE TABLE group_permissions
(
    group_id      BIGINT NOT NULL,
    permission_id BIGINT NOT NULL,
    CONSTRAINT pk_group_permissions PRIMARY KEY (group_id, permission_id)
);

CREATE TABLE group_roles
(
    group_id BIGINT NOT NULL,
    role_id  BIGINT NOT NULL,
    CONSTRAINT pk_group_roles PRIMARY KEY (group_id, role_id)
);

CREATE TABLE groups
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    created_by  VARCHAR(255),
    updated_at  TIMESTAMP WITHOUT TIME ZONE,
    updated_by  VARCHAR(255),
    name        VARCHAR(255),
    description VARCHAR(255),
    status      VARCHAR(255),
    CONSTRAINT pk_groups PRIMARY KEY (id)
);

CREATE TABLE permissions
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    created_by  VARCHAR(255),
    updated_at  TIMESTAMP WITHOUT TIME ZONE,
    updated_by  VARCHAR(255),
    name        VARCHAR(255),
    description VARCHAR(255),
    status      VARCHAR(255),
    CONSTRAINT pk_permissions PRIMARY KEY (id)
);

CREATE TABLE role_permissions
(
    permission_id BIGINT NOT NULL,
    role_id       BIGINT NOT NULL,
    CONSTRAINT pk_role_permissions PRIMARY KEY (permission_id, role_id)
);

CREATE TABLE roles
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    created_by  VARCHAR(255),
    updated_at  TIMESTAMP WITHOUT TIME ZONE,
    updated_by  VARCHAR(255),
    name        VARCHAR(255)                            NOT NULL,
    description VARCHAR(255),
    status      VARCHAR(255),
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE user_groups
(
    group_id BIGINT NOT NULL,
    user_id  BIGINT NOT NULL,
    CONSTRAINT pk_user_groups PRIMARY KEY (group_id, user_id)
);

CREATE TABLE user_roles
(
    role_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    CONSTRAINT pk_user_roles PRIMARY KEY (role_id, user_id)
);

CREATE TABLE users
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at    TIMESTAMP WITHOUT TIME ZONE,
    created_by    VARCHAR(255),
    updated_at    TIMESTAMP WITHOUT TIME ZONE,
    updated_by    VARCHAR(255),
    username      VARCHAR(255)                            NOT NULL,
    first_name    VARCHAR(255),
    last_name     VARCHAR(255),
    user_image    VARCHAR(255),
    password      VARCHAR(255)                            NOT NULL,
    enabled       BOOLEAN                                 NOT NULL,
    last_login    TIMESTAMP WITHOUT TIME ZONE,
    login_attempt INTEGER,
    max_attempt   INTEGER,
    email         VARCHAR(255)                            NOT NULL,
    user_type     VARCHAR(255)                            NOT NULL,
    gender        VARCHAR(255),
    date_of_birth VARCHAR(255),
    status        VARCHAR(255),
    CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE roles
    ADD CONSTRAINT uc_roles_name UNIQUE (name);

ALTER TABLE users
    ADD CONSTRAINT uc_users_email UNIQUE (email);

ALTER TABLE users
    ADD CONSTRAINT uc_users_username UNIQUE (username);

ALTER TABLE group_permissions
    ADD CONSTRAINT fk_groper_on_group FOREIGN KEY (group_id) REFERENCES groups (id);

ALTER TABLE group_permissions
    ADD CONSTRAINT fk_groper_on_permission FOREIGN KEY (permission_id) REFERENCES permissions (id);

ALTER TABLE group_roles
    ADD CONSTRAINT fk_grorol_on_group FOREIGN KEY (group_id) REFERENCES groups (id);

ALTER TABLE group_roles
    ADD CONSTRAINT fk_grorol_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE role_permissions
    ADD CONSTRAINT fk_rolper_on_permission FOREIGN KEY (permission_id) REFERENCES permissions (id);

ALTER TABLE role_permissions
    ADD CONSTRAINT fk_rolper_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE user_groups
    ADD CONSTRAINT fk_usegro_on_group FOREIGN KEY (group_id) REFERENCES groups (id);

ALTER TABLE user_groups
    ADD CONSTRAINT fk_usegro_on_user FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_user FOREIGN KEY (user_id) REFERENCES users (id);